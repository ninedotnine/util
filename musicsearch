#!/usr/bin/dash
# dependencies: dmenu, find, mplayer, zenity

musicdir="$HOME/music/"
cache="$HOME/.local/share/dmenu_music"
tmpcache="/tmp/dmenu_music2.tmp"

# find just basenames
#find -L ~/music -iname "*.flac" -printf "%f\n" > "$cache"
#find -L ~/music -iname "*.m4a" -printf "%f\n" >> "$cache"
#find -L ~/music -iname "*.mp3" -printf "%f\n" >> "$cache"
#find -L ~/music -iname "*.ogg" -printf "%f\n" >> "$cache"
#find -L ~/music -iname "*.opus" -printf "%f\n" >> "$cache"

# find full paths
# uncomment these if the database is out of date
find -L ~/music -iname "*.flac" > "$cache"
find -L ~/music -iname "*.m4a" >> "$cache"
find -L ~/music -iname "*.mp3" >> "$cache"
find -L ~/music -iname "*.ogg" >> "$cache"
find -L ~/music -iname "*.opus" >> "$cache"
find -L ~/music -iname "*.mpg" >> "$cache"
sort "$cache" -o "$cache"

# cut the common directory out of the names (the first 17 chars)
cut --characters=17- "$cache" > "$tmpcache"
# cut -c 17- "$cache" > "$tmpcache" # same as above, short form

filename=$(dmenu -i -l 4 < "$tmpcache")
if [ "$?" = 1 ]; then
    # zenity --warning --text="did you hit ESC?"
    rm "$tmpcache"
    exit 1
fi

rm "$tmpcache"
#location=$(find ~/music -name "$filename") 
location="$musicdir$filename"

if [ -e "$location" ]; then
#     zenity --warning --text="$location is real!!!"
    exec mplayer "$location" > /dev/null
# opening the fifo for reading will block until another process opens to write
#     exec mplayer "$location" > /dev/null < ~/.mplayer/input_pipe
else
    zenity --warning --text="$location is false!!!"
    #echo "no valid filename specified" >&2
fi
